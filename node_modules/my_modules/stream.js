var ipc = require('ipc');

exports.streaming = function(
  TWITTER_CONSUMER_KEY,
  TWITTER_CONSUMER_SECRET,
  ACCESS_TOKEN_KEY,
  ACCESS_TOKEN_SECRET,
  mainWindow
) {
  var DB_NAME = 'kirokutron';

  var mongoose = require('mongoose');
  mongoose.connect('mongodb://localhost/' + DB_NAME);
  var db = mongoose.connection;
  db.on('error', console.error.bind(console, 'connection error:'));
  db.once('open', function() {
    console.log("Connect database successfully!");
  });

  var schema = new mongoose.Schema({
    body:  {
      text: String,
      created_at: String
    },
    user: {
      name: String,
      screen_name: String
    },
    create_at: { type: Date, default: Date.now }
  });
  mongoose.model('Tweet', schema);
  var Tweet = mongoose.model('Tweet');

  var Stream = require('user-stream');
  var user_streem = new Stream({
    consumer_key: TWITTER_CONSUMER_KEY,
    consumer_secret: TWITTER_CONSUMER_SECRET,
    access_token_key: ACCESS_TOKEN_KEY,
    access_token_secret: ACCESS_TOKEN_SECRET
  });
  user_streem.stream();
  user_streem.on('data', function(json) {
    // TODO : ハッシュタグでツイートを識別
    if (json['text'] != undefined) {
      var tweet = new Tweet();
      tweet.body = {
        text: json['text'],
        created_at: json['created_at']
      };
      tweet.user = {
        name: json['user']['name'],
        screen_name: json['user']['screen_name']
      };

      tweet.save(function(err, data){
        if (err) return console.error(err);
        mainWindow.webContents.send('db-updated', 'saved');
        return console.log("Save tweet!");
      });
    }
  });
}










